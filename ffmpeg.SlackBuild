#!/bin/sh
#
# Slackware build script for FFmpeg
# Copyright (C) 2008-2016 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: ffmpeg.SlackBuild,v 1.15.4.3 2016/09/14 17:05:12 gsotirov Exp $
#

. ../../slack-package.conf

NAME=ffmpeg
VERSION=0.10.16
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Check out, backup and fix source
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.?z* || exit 3
cd $SRC
fix_source

# Configure
CFLAGS="$SLKCFLAGS `pkg-config --cflags libopenjpeg1`" \
CXXFLAGS="$SLKCFLAGS `pkg-config --cflags libopenjpeg1`" \
./configure --arch=$ARCH \
            --target-os=linux \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --enable-shared \
            --disable-static \
            --enable-gpl \
            --enable-version3 \
            --enable-doc \
            --enable-ffmpeg \
            --enable-ffplay \
            --enable-ffprobe \
            --enable-ffserver \
            --enable-avdevice \
            --enable-avcodec \
            --enable-avformat \
            --enable-swresample \
            --enable-swscale \
            --enable-postproc \
            --enable-avfilter \
            --enable-pthreads \
            --enable-x11grab \
            --enable-runtime-cpudetect \
            --enable-bzlib \
            --enable-frei0r \
            --enable-gnutls \
            --enable-libass \
            --enable-libcelt \
            --enable-libopencore-amrnb \
            --enable-libopencore-amrwb \
            --enable-libcdio \
            --enable-libdc1394 \
            --enable-libdirac \
            --enable-libgsm \
            --enable-libmodplug \
            --enable-libmp3lame \
            --enable-libopenjpeg \
            --enable-libpulse \
            --enable-librtmp \
            --enable-libschroedinger \
            --enable-libspeex \
            --enable-libtheora \
            --enable-libv4l2 \
            --enable-libvorbis \
            --enable-libvpx \
            --enable-libx264 \
            --enable-libxvid \
            --enable-zlib \
            --disable-debug || exit 4

#           --enable-libfaac # non-free

# Build & install
make V=1 -j4 || exit 5
make V=1 DESTDIR=$PKG install || exit 6

# Additionally install ffserver config file
install -m 755 -d $PKG/etc
install -m 644 doc/ffserver.conf $PKG/etc/ffserver.conf.new

# Move libraries in the right place
if [ "$ARCH" == "x86_64" ]; then
  ( cd $PKG; mv usr/lib/* usr/lib${LIBDIRSUFFIX}/; rmdir usr/lib )
fi

bin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES COPYING* MAINTAINERS"
( cd $SRC; create_docs $PKG $NAME-$VERSION )
( cd $PKG/usr/doc/$NAME-$VERSION; cp -a COPYING.GPLv3 COPYING )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/doinst.sh      $PKG/install/doinst.sh

mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/slack-desc       $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/doinst.sh        $PKG/usr/src/slackbuilds/$NAME-$VERSION/doinst.sh
install -m 644 $CWD/$NAME.SlackBuild $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

