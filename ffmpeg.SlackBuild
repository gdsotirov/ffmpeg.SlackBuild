#!/bin/sh
#
# SlackBuild for ffmpeg
# Written by Georgi D. Sotirov <gdsotirov@dir.bg>
#
# Bacause of the nature of the ffmpeg development this script checks out
# the source code and builds a package for the current date.
#

. ../../slack-package.conf

NAME=ffmpeg
VERSION=0.6.7
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Check out, backup and fix source (if source archive not present)
cd $TMP
tar -xvf $CWD/$NAME-$VERSION.tar.?z* || exit 3
cd $SRC
fix_source

CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure --arch=$ARCH \
            --target-os=linux \
            --prefix=/usr \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --disable-debug \
            --enable-shared \
            --disable-static \
            --enable-gpl \
            --enable-postproc \
            --enable-avfilter \
            --enable-avfilter-lavf \
            --enable-pthreads \
            --enable-x11grab \
            --enable-runtime-cpudetect \
            --enable-bzlib \
            --enable-libopencore-amrnb \
            --enable-libopencore-amrwb \
            --enable-version3 \
            --enable-libdc1394 \
            --enable-libdirac \
            --enable-libfaad \
            --enable-libgsm \
            --enable-libmp3lame \
            --enable-libopenjpeg \
            --enable-librtmp \
            --enable-libschroedinger \
            --enable-libspeex \
            --enable-libtheora \
            --enable-libvorbis \
            --enable-libvpx \
            --enable-libx264 \
            --enable-libxvid \
            --enable-zlib || exit 4
#           --enable-libfaac \   # non-free
#           --enable-libamr-nb \ # non-free
#           --enable-libamr-wb \ # non-free

# Build & install
make V=1 -j4 || exit 5
make V=1 DESTDIR=$PKG install || exit 6

# Move libs in the right place
( cd $PKG/usr; mv lib/* lib64/; rmdir lib )
# Additionally install ffserver config file
install -m 755 -d $PKG/etc
install -m 644 doc/ffserver.conf $PKG/etc/ffserver.conf.new

bin_perms $PKG
(cd $PKG; strip_bin; strip_lib)
DOCFILES="$DOCFILES COPYING* MAINTAINERS"
(cd $SRC; create_docs $PKG $NAME-$VERSION)
( cd $PKG/usr/doc/$NAME-$VERSION; cp -a COPYING.GPLv3 COPYING )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/doinst.sh      $PKG/install/doinst.sh

mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/slack-desc       $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required   $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/doinst.sh        $PKG/usr/src/slackbuilds/$NAME-$VERSION/doinst.sh
install -m 644 $CWD/$NAME.SlackBuild $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

